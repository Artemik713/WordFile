

К Г Э УМИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ
Федеральное государственное бюджетное образовательное учреждение
высшего образования
«КАЗАНСКИЙ ГОСУДАРСТВЕННЫЙ ЭНЕРГЕТИЧЕСКИЙ УНИВЕРСИТЕТ»
(ФГБОУ ВО «КГЭУ»)
Институт дополнительного профессионального образования
ДПП ПП «Аналитика и цифровая трансформация бизнес-процессов»








ВЫПУСКНАЯ КВАЛИФИКАЦИОННАЯ РАБОТА







ОбучающийсяМихеев Андрей Сергеевичфамилия имя отчествоподпись

Тема 	Проектирование сервиса «Управление заселением студентов в общежитие»	


Руководитель ВКР: доцент каф. ЦСМБеляев Э.И.подпись


















Казань 2025




К Г Э УМИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ
Федеральное государственное бюджетное образовательное учреждение
высшего образования
«КАЗАНСКИЙ ГОСУДАРСТВЕННЫЙ ЭНЕРГЕТИЧЕСКИЙ УНИВЕРСИТЕТ»
(ФГБОУ ВО «КГЭУ»)
Институт дополнительного профессионального образования
ДПП ПП «Аналитика и цифровая трансформация бизнес-процессов»

З А Д А Н И Е
на выполнение выпускной квалификационной работы

Обучающийся 	Михеев Андрей Сергеевич	
Тема 	Проектирование сервиса «Управление заселением студентов в общежитие»	
утверждена приказом от15 мая 2025 г.№135/псРуководитель ВКР: доцент каф. ЦСМ Беляев Э.И.

Исходные данные к ВКР: данные, полученные в ходе прохождения практики

Содержание разделов ВКР (перечень подлежащих разработке вопросов):

1. Анализ информационной инфраструктуры предприятия организационных регламентов предприятия; порядок и методы ведения делопроизводства.  
2. Формирование и анализ требований к информационной системе управления.
3. Сбор и анализ требований к программному обеспечению.
4. Разработка существующей, либо планируемой на предприятии системы бизнес-процессов в нотации BPMN 2.0.
5. Проектирование программного обеспечения.
6. Разработка программного обеспечения.
7. Проведение технико-экономического обоснования внедрения программного обеспечения.

Перечень иллюстрационного материала 	презентация	
Рекомендуемая литература: 	И. В. Потёмкин "Методы и средства проектирования программного обеспечения" - Описывает различные методы и инструменты, используемые в процессе проектирования ПО.
Ю. Ш. Зайнуллин "Разработка и проектирование программного обеспечения" - Практическое руководство, , которое охватывает все этапы разработки от идеи до реализации.

Календарный план

Наименование этапов выполнения ВКРСрок выполнения этапа ВКРОтметка о выполненииАнализ требований к программному обеспечению; проектирование программного обеспечения;12.04.2025ВыполненоФормирование и анализ требований к информационной системе управления17.04.2025ВыполненоСбор и анализ требований к программному обеспечению. 22.04.2025ВыполненоРазработка существующей, либо планируемой на предприятии системы бизнес-процессов в нотации BPMN 2.0.30.04.2025ВыполненоПроектирование программного обеспечения.  06.05.2025ВыполненоРазработка программного обеспечения.  22.05.2025ВыполненоПроведение технико-экономического обоснования внедрения программного обеспечения24.05.2025Выполнено

Передача обучающимся электронного варианта ВКР руководителю не позднее трех дней до даты защиты ВКР.

Руководитель ВКРБеляев Э.И.подписьфамилия и.о.
Задание принял к исполнению31.03.2025подпись обучающегосядата




СОДЕРЖАНИЕ

1 АНАЛИЗ ИНФОРМАЦИОННОЙ ИНФРАСТРУКТУРЫ ПРЕДПРИЯТИЯ ОРГАНИЗАЦИОННЫХ РЕГЛАМЕНТОВ ПРЕДПРИЯТИЯ; ПОРЯДОК И МЕТОДЫ ВЕДЕНИЯ ДЕЛОПРОИЗВОДСТВА	7
1.1.	Общая характеристика учреждения (вуза/организации)	7
1.1.1 Структура и функции подразделений, связанных с заселением студентов	7
1.1.2 Описание контингента студентов и объём операций по заселению	8
1.2. Анализ информационной инфраструктуры предприятия	8
1.2.1 Описание текущих информационных систем и используемого ПО	8
1.2.2 Используемые базы данных и хранилища информации	9
1.2.3 Пользовательская инфраструктура и интерфейсы	9
1.3 Организационные регламенты процесса заселения	9
1.4. Делопроизводство в процессе заселения студентов	10
1.5. Проблемы и недостатки текущей информационной инфраструктуры и регламентов	11
1.6. Выводы по результатам анализа	12
2 ФОРМИРОВАНИЕ И АНАЛИЗ ТРЕБОВАНИЙ К ИНФОРМАЦИОННОЙ СИСТЕМЕ УПРАВЛЕНИЯ	14
2.1 Анализ текущей организационной модели управления балльной системой	14
2.2 Функциональные требования к системе	15
2.3 Нефункциональные требования к системе	16
2.4 Вывод по результатам анализа	17
3 СБОР И АНАЛИЗ ТРЕБОВАНИЙ К ПРОГРАММНОМУ ОБЕСПЕЧЕНИЮ	19
3.1 Характеристика и анализ отрасли	19
3.2 Характеристика потребителей услуг и конкурентной среды	20
3.3 Анализ требований к автоматизации	21
3.4 Итоговый список требований	22
4 РАЗРАБОТКА СУЩЕСТВУЮЩЕЙ, ЛИБО ПЛАНИРУЕМОЙ НА ПРЕДПРИЯТИИ СИСТЕМЫ БИЗНЕС-ПРОЦЕССОВ В НОТАЦИИ BPMN 2.0	24
5 ПРОЕКТИРОВАНИЕ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ	29
5.1 Назначение и цели программного продукта	29
5.2 Разработка диаграммы вариантов использования	30
5.3 Разработка диаграмм последовательности	33
5.4 Разработка диаграммы развертывания	36
6 РАЗРАБОТКА ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ	39
7 ПРОВЕДЕНИЕ ТЕХНИКО-ЭКОНОМИЧЕСКОГО ОБОСНОВАНИЯ ВНЕДРЕНИЯ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ	44
ЗАКЛЮЧЕНИЕ	45
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ	46
ПРИЛОЖЕНИЯ	47


ВВЕДЕНИЕ
     1 АНАЛИЗ ИНФОРМАЦИОННОЙ ИНФРАСТРУКТУРЫ ПРЕДПРИЯТИЯ ОРГАНИЗАЦИОННЫХ РЕГЛАМЕНТОВ ПРЕДПРИЯТИЯ; ПОРЯДОК И МЕТОДЫ ВЕДЕНИЯ ДЕЛОПРОИЗВОДСТВА

1.1. Общая характеристика учреждения (вуза/организации) 
     1.1.1 Структура и функции подразделений, связанных с заселением студентов 

     Казанский государственный энергетический университет является одним из трех специализированных энергетических вузов в стране и занимает одно из ведущих мест в регионе по уровню образования, технической оснащенности и условиям для научной работы и учебного процесса. КГЭУ входит в топ-100 высших школ страны – участников программы Министерства науки и высшего образования Российской Федерации «Приоритет-2030».
     Вуз входит в крупнейшие промышленные и научно-образовательные консорциумы России.
     Произведен капитальный ремонт учебных аудиторий лабораторий и научных центров. К собственности университета относятся 4 комфортабельных общежития.
     Заселение студентов в общежития КГЭУ организуется через Подразделение административно-хозяйственного обеспечения, с которым также взаимодействуют представители студенческих советов общежитий, деканаты и дирекции институтов.
     Комендантская служба – непосредственная организация заселения, ведение журналов, контроль за состоянием помещений.
     Бухгалтерия – начисление оплаты за проживание, работа с финансовыми документами.
     Каждое подразделение выполняет строго регламентированные функции, однако взаимодействие между ними часто затруднено из-за отсутствия единой информационной системы.

     1.1.2 Описание контингента студентов и объём операций по заселению

     КГЭУ обучает более 10 000 студентов, из которых значительная часть – иногородние. Университет имеет 4 общежития, рассчитанными на заселение 2232 студентов. Ежегодно в период перед началом учебного года производится перераспределение и заселение нескольких тысяч студентов.
     В первоочередном порядке жилые помещения в общежитиях КГЭУ предоставляются категориям обучающихся согласно жилищному законодательству России и локальным актам КГЭУ. После заселения вышеуказанных лиц преимущественное право на заселение в общежития имеют иногородние и иностранные обучающиеся, зачисленные на 1 курс очной формы обучения. Оставшиеся места распределяются при наличии свободных мест в общежитиях.

     1.2. Анализ информационной инфраструктуры предприятия
     1 
     1.1 
     1.2 
     1.2.1 Описание текущих информационных систем и используемого ПО

     На данный момент для управления заселением/выселением в общежития в КГЭУ используются:
     * Электронные таблицы Excel – формирование списков на заселение/выселения;
     * Бумажные журналы – фиксация заселений/выселений, учета балльно-рейтинговой системы и актов;
     * «1С: Бухгалтерия» для бухгалтерского учёта;
     * Внутренние информационные порталы и локальные базы данных.
     Однако специализированного решения для автоматизации заселения студентов не предусмотрено.
     Ключевые проблемы текущих решений:
     * Разрозненность данных;
     * Необходимость ручного ввода одинаковой информации, заполнения журналов;
     * Отсутствие онлайн-доступа для студентов;
     * Ограниченные возможности формирования отчетности.
     Существующий процесс приводит к избыточной нагрузке на сотрудников, рискам потери информации и дублирования операций. Отсутствует единая цифровая платформа с интеграцией в АСУ вуза.

     1.2.2 Используемые базы данных и хранилища информации

     Информация о студентах, нуждающихся в заселении, хранится в локальных таблицах и базах, не синхронизированных между различными подразделениями. 
     Локальные базы комендантов – дублируют часть информации из центральной системы.
     Архив бумажных документов – договоры, заявления, акты.

     1.2.3 Пользовательская инфраструктура и интерфейсы

     Пользовательский интерфейс взаимодействия со студентами ограничивается публикацией списков на сайте и сбором заявок в виде бумажных документов. Отсутствует веб-интерфейс или мобильное приложение, через которое студент мог бы подать заявление, отследить статус или загрузить документы.

     1.3 Организационные регламенты процесса заселения

     Организация процесса заселения в студенческие общежития представляет собой сложный и многоступенчатый механизм, требующий четкой координации между различными структурными подразделениями университета. Управление общежитиями осуществляется на двух уровнях, каждый из которых выполняет свои функции, направленные на обеспечение комфортного и безопасного проживания студентов.
     Административный уровень включает в себя комендантов общежитий и   подразделение административно-хозяйственного обеспечения. На этом уровне принимаются ключевые решения, связанные с распределением мест, контролем за соблюдением правил проживания и взаимодействием с вышестоящими инстанциями.
     Исполнительный уровень представлен вахтёрами, техническим персоналом и студенческим активом (старостами общежитий). Вахтёры обеспечивают круглосуточный контроль доступа в общежитие, следят за порядком и безопасностью. Технический персонал отвечает за поддержание инфраструктуры в рабочем состоянии, оперативно устраняя возникающие неисправности. Студенческий актив играет важную роль в организации досуга проживающих, помогает в адаптации новичков и выступает связующим звеном между администрацией и студентами.
     Регламент заселения включает в себя несколько последовательных этапов: подачу заявления на заселение, проверку права на получение места в соответствии с балльно-рейтинговой системой, утверждение списков, подписание договора и, наконец, непосредственное заселение в общежитие. В настоящее время все эти процессы осуществляются вручную, что не только увеличивает временные затраты, но и создает определенные трудности при необходимости масштабирования системы в условиях роста числа студентов.
Процесс регламентируется локальными актами КГЭУ, а также нормативами Минобрнауки РФ, включая Положение о студенческих общежитиях, правила проживания и санитарные нормы.

1.4. Делопроизводство в процессе заселения студентов

     Ведётся как бумажный, так и электронный документооборот: заявления, договоры, приказы, списки, зачетные книги студентов. Заявления оформляются в письменной форме, и их обработка осуществляется вручную.
     Учет заселенных студентов ведется с использованием Excel-таблиц, журналов на вахтах и локальных баз данных. Такой подход, несмотря на свою простоту, имеет ряд существенных недостатков, включая отсутствие централизованного контроля, сложности в актуализации информации и высокую вероятность дублирования данных. Контроль за соблюдением сроков проживания и своевременностью оплаты также осуществляется вручную, что увеличивает нагрузку на сотрудников и снижает эффективность управления.
     Особого внимания заслуживает вопрос ведения зачетных книжек студентов, которые до сих пор представлены исключительно в бумажном виде. Их заполнением занимаются старосты этажей, что в условиях большого потока студентов может приводить к задержкам и неточностям.
     Бумажные документы хранятся в архиве университета, а электронные — на локальных серверах. Однако отсутствие единого регламента по резервному копированию и защите данных создает серьезные риски, связанные с возможной утратой информации или нарушением ее конфиденциальности. В современных условиях, когда вопросы кибербезопасности и защиты персональных данных выходят на первый план, это является значительным упущением, требующим решения.

     1.5. Проблемы и недостатки текущей информационной инфраструктуры и регламентов

     В результате проведенного анализа информационной инфраструктуры предприятия, организационных регламентов и методов ведения делопроизводства были выявлены существенные недостатки, препятствующие эффективному управлению процессом заселения студентов в общежития.
     Наиболее критичной проблемой в области ИТ-инфраструктуры является отсутствие специализированной системы автоматизации заселения, что приводит к необходимости использования разрозненных программных решений общего назначения. Данная ситуация усугубляется несогласованностью между различными подразделениями в вопросах учёта студентов, результатом чего становится дублирование информации в различных базах данных и системах. Преобладание ручной обработки данных не только снижает оперативность принятия решений, но и значительно повышает вероятность возникновения ошибок.
     Организационные регламенты характеризуются избыточной многоэтапностью процедуры заселения, включающей множественные согласования и промежуточные проверки, что существенно замедляет весь процесс. Критическая зависимость от человеческого фактора проявляется в виде систематических ошибок при составлении списков, периодической потери заявлений и субъективности в принятии решений. Особую озабоченность вызывает недостаточная прозрачность критериев распределения мест в общежитиях, что создает почву для конфликтных ситуаций и снижает доверие студентов к справедливости процедуры.
     Существующая система делопроизводства демонстрирует явные признаки устаревания, характеризуясь преимущественным использованием традиционных методов документооборота на бумажных носителях. Отсутствие цифрового архива затрудняет поиск и анализ исторических данных, а также препятствует формированию аналитических отчетов для принятия управленческих решений. Значительные трудозатраты на ручное составление списков и формирование приказов не только снижают производительность труда сотрудников, но и увеличивают временные рамки выполнения процедур заселения, что особенно критично в период массового заселения студентов в начале учебного года.

     1.6. Выводы по результатам анализа

     В результате комплексного анализа информационной инфраструктуры, организационных регламентов и системы делопроизводства установлена критическая необходимость автоматизации процесса заселения студентов в общежития. Выявленные проблемы, связанные с отсутствием специализированного программного обеспечения, избыточной бюрократизацией процедур и преобладанием ручного труда, приводят к существенному замедлению административных процессов, росту нагрузки на персонал и снижению удовлетворенности студентов качеством предоставляемых услуг.
     Стратегическая цель проекта заключается в создании интегрированной системы автоматизации ключевых этапов заселения, включающей электронную подачу заявлений на апелляцию, цифровое оформление актов и систему отслеживания начисления баллов в режиме реального времени. Приоритетными зонами улучшения определены повышение прозрачности процедур распределения баллов, кардинальное снижение административной нагрузки на сотрудников и качественное улучшение пользовательского опыта студентов.
     Разработка специализированного мобильного сервиса «Управление заселением студентов в общежитие» представляет собой стратегически обоснованный этап цифровой трансформации процессов КГЭУ. Предлагаемое решение обеспечит централизацию данных в единой информационной среде, автоматизацию критически важных процедур и создание масштабируемой технологической платформы, соответствующей современным требованиям эффективного управления образовательными организациями.

     2 ФОРМИРОВАНИЕ И АНАЛИЗ ТРЕБОВАНИЙ К ИНФОРМАЦИОННОЙ СИСТЕМЕ УПРАВЛЕНИЯ
     2.1 Анализ текущей организационной модели управления балльной системой
     
     В настоящее время процесс учета баллов студентов, проживающих в общежитиях энергетического университета, не регламентирован единым цифровым стандартом. Каждое общежитие использует собственные подходы: от бумажных журналов до разрозненных Excel-файлов. Такая модель создает множество проблем: отсутствие единых форматов хранения, риски потери информации, невозможность синхронизации между подразделениями и высокую нагрузку на сотрудников.
     Организационно процесс распределен между различными участниками: председателем студенческого совета общежитий, его заместителями, старостами этажей, а также председателями студенческих организаций университета. Коммуникация между ними осуществляется преимущественно по электронной почте или в мессенджерах, что делает отслеживание и архивирование решений крайне затруднительным. Дополнительно отсутствует сквозная отчетность и централизованный механизм рассмотрения апелляций со стороны студентов.
     Отсутствие формализованных алгоритмов приводит к несогласованности решений: одни и те же действия могут оцениваться по-разному в зависимости от субъективного мнения ответственного лица. В результате возникают ситуации, при которых у студентов снижается доверие к системе, а администрация не может оперативно контролировать ситуацию.
     В связи с этим возникает необходимость трансформации текущей организационной модели: от ручного и неструктурированного учета к централизованной информационной системе с четко разграниченными ролями, прозрачными бизнес-процессами и возможностью цифрового взаимодействия между участниками.
     2.2 Функциональные требования к системе
     
     Функциональные требования к системе представляют собой перечень возможностей, которые она должна реализовать для обеспечения полноценного и автоматизированного управления балльной системой. Учитывая анализ текущих процессов и потребности пользователей, можно выделить следующие ключевые функции:
     1. Аутентификация и ролевая модель – необходимо реализовать механизм регистрации и авторизации пользователей с учетом их роли (студент, председатель, староста этажа). Каждая роль должна иметь доступ только к определенным функциям и данным, что обеспечит безопасность и соблюдение служебных границ.
     2. Централизованный учет баллов – в системе должна быть реализована база данных, в которой фиксируются все начисления и списания баллов с указанием даты, причины, участников и подтверждающих материалов. Это позволит обеспечить полноту и прослеживаемость информации.
     3. Механизм ввода событий – необходим интерфейс для быстрого добавления событий (поощрения или нарушения) с возможностью указания типа события, комментария, выбора категории и прикрепления доказательств.
     4. Личный кабинет студента – студент должен видеть текущее количество баллов, историю операций, статус апелляций, а также иметь возможность самостоятельно загружать доказательства (например, скриншоты, фотографии мероприятий) подавать апелляции по спорным случаям.
     5. Поддержка апелляционного механизма – система должна обеспечивать полную процедуру подачи и обработки апелляций: от подачи обращения до уведомления о решении. Все этапы должны быть зафиксированы, чтобы обеспечить прозрачность процедуры.
     6. Автоматизация расчетов – начисление и списание баллов должно происходить на основе заранее заданных алгоритмов и правил, чтобы исключить влияние субъективного мнения и человеческий фактор.
     7. Модуль отчетности и аналитики – председатель и его заместитель подразделения должны иметь возможность формировать отчеты: по отдельным студентам, общежитиям, категориям событий и временным периодам. Возможность выгрузки отчетов в форматах PDF, Excel значительно повысит эффективность анализа данных.
     8. Интеграция с другими ИС вуза – для обеспечения целостности образовательной среды система должна предусматривать возможность интеграции с внутренними информационными системами университета.
     Каждая из этих функций направлена на устранение текущих проблем и построение единой цифровой среды, способной обеспечить справедливый, прозрачный и автоматизированный процесс управления балльной системой.

     2.3 Нефункциональные требования к системе

     Нефункциональные требования определяют общие характеристики качества системы, такие как удобство использования, надежность, безопасность и производительность. Ниже представлены ключевые аспекты:
     1. Интуитивно понятный интерфейс. В системе должен быть реализован удобный и современный интерфейс с адаптацией под различные устройства. Пользовательские сценарии должны быть максимально простыми и понятными даже для пользователей с минимальным уровнем цифровой грамотности.
     2. Обеспечение безопасности и конфиденциальности. Все персональные данные сотрудников и студентов должны быть надежно защищены. Система обязана соответствовать требованиям федерального законодательства (включая ФЗ №152 «о персональных данных») и использовать методы шифрования, двухфакторную авторизацию, а также механизмы резервного копирования данных.
     3. Высокая надежность и доступность. Система должна обеспечивать бесперебойную работу в течение учебного года, быть отказоустойчивой к сбоям и иметь средства быстрого восстановления при аварийных ситуациях. 
     4. Масштабируемость и гибкость системы. Архитектура системы должна позволять масштабирование в зависимости от числа пользователей и объема данных. Система должна легко адаптироваться под изменения организационной структуры или правил начисления баллов.
     5. Высокая производительность. Все основные операции (просмотр истории, добавление события, загрузка отчета) должны выполняться с минимальной задержкой. Система должна быть оптимизирована под работу в многопользовательской среде.
     Эти требования обеспечат основу для создания качественного, стабильного и масштабируемого решения, способного эффективно функционировать в условиях динамично развивающегося образовательного учреждения.
     
     2.4 Вывод по результатам анализа
     
     Проведённый анализ организационной модели, функциональных и нефункциональных требований к информационной системе «Управление заселением студентов в общежитие» позволил сформировать чёткое понимание текущих проблем и определить направления их системного решения. В результате было установлено, что существующая система учёта баллов и взаимодействия между участниками процесса заселения характеризуется высокой степенью фрагментации, отсутствием формализованных цифровых механизмов, а также значительной зависимостью от человеческого фактора.
     Реализация централизованной информационной системы, обеспечивающей прозрачность начисления и списания баллов, цифровое хранение подтверждающих материалов, автоматизацию процедур подачи апелляций и формирования отчетности, является стратегически необходимой мерой. Система должна предусматривать строгую ролевую модель, обеспечивающую безопасный доступ к данным, поддержку масштабируемости и интеграцию с внутренними ИС университета.
     Разработанные функциональные и нефункциональные требования отражают приоритеты всех заинтересованных сторон — от студентов до административного персонала — и служат основой для проектирования и внедрения цифровой платформы, способной существенно повысить эффективность и прозрачность процессов заселения. Выводы данного раздела подтверждают актуальность цифровой трансформации и закладывают фундамент для последующих этапов проектирования и реализации программного обеспечения.







     
     3 СБОР И АНАЛИЗ ТРЕБОВАНИЙ К ПРОГРАММНОМУ ОБЕСПЕЧЕНИЮ

     3.1 Характеристика и анализ отрасли
     
     Современная система высшего образования в России и в мире активно развивается в направлении цифровизации, что предполагает не только переход к электронным образовательным платформам, но и автоматизацию смежных процессов, напрямую влияющих на качество жизни и успеваемость студентов. Одной из таких сфер является организация проживания студентов в общежитиях. В условиях постоянного роста числа обучающихся, увеличения требований к прозрачности и эффективности управления, перед образовательными учреждениями встает задача оптимизации процессов, связанных с заселением, учетом поведения, соблюдения правил проживания и выставления оценочных баллов, влияющих на приоритет при распределении мест.
     Отрасль образования, в частности – университетский сектор, характеризуется высокой степенью регламентации, необходимостью строгого учета данных, а также обязательным соблюдением нормативных требований по обеспечению равных условий для всех студентов. В этом контексте вопросы, связанные с управлением студенческим проживанием, становятся неотъемлемой частью общей административной нагрузки. Эффективное управление общежитиями требует постоянного взаимодействия между студентами, комендантами, администрацией и руководителями учебных подразделений. При этом многие процессы всё ещё остаются ручными и слабо структурированными, что ведет к возникновению конфликтных ситуаций, потере данных и несправедливым решениям.
     На данный момент в большинстве вузов, включая энергетические университеты, балльная система учёта поведения и активности студентов в общежитиях реализуется фрагментарно, зачастую в виде таблиц, бумажных журналов или неунифицированных файлов. Это не только затрудняет управление, но и делает невозможным объективную оценку данных в масштабах всего учебного заведения. Отсутствие централизованного цифрового решения снижает эффективность и прозрачность процедур, создаёт барьеры для анализа и принятия управленческих решений.
     С учётом технологического уровня современного образовательного процесса и возрастающих ожиданий со стороны студентов, внедрение специализированного программного продукта для управления балльной системой в общежитии становится не только актуальной задачей, но и логичным этапом цифровой трансформации университетской среды. Особенно это важно для технических вузов, таких как энергетические университеты, где студенты ориентированы на использование современных IT-решений, а сама организация обучения требует высокой дисциплины и чёткого соблюдения правил проживания.
     
     3.2 Характеристика потребителей услуг и конкурентной среды
     
     Основными потребителями разрабатываемого программного продукта являются студенты, проживающие в общежитиях энергетического университета, а также представители администрации, отвечающие за учет и контроль проживания. Дополнительными пользователями системы являются сотрудники деканатов, коменданты и руководители студенческих организаций, которые участвуют в процессе выставления, корректировки и рассмотрения баллов. Таким образом, целевая аудитория охватывает как обучающихся, заинтересованных в прозрачности и объективности процесса, так и административный персонал, заинтересованный в снижении нагрузки и упрощении процедур учета.
     Для студентов ключевыми преимуществами системы являются доступ к актуальной информации о баллах, возможность загрузки доказательств (например, фотографий выполненных заданий или нарушений), а также подача апелляций в случае несогласия с начислениями. Это формирует доверие к системе и способствует более дисциплинированному поведению. Администрация, в свою очередь, получает инструмент для автоматизированного контроля, быстрой генерации отчетов и упрощения документооборота.
     Конкурентная среда в данном сегменте пока слабо развита. На рынке существует несколько универсальных решений для управления общежитиями, однако они, как правило, не включают в себя специализированных модулей для работы с балльной системой. Некоторые вузы разрабатывают внутренние решения на базе таблиц, электронных журналов или локальных CRM-платформ, однако такие подходы не обеспечивают должного уровня автоматизации, безопасности и масштабируемости. Это создаёт нишу для специализированного программного продукта, ориентированного на потребности именно образовательных учреждений и адаптированного под особенности конкретного вуза.
     
     3.3 Анализ требований к автоматизации
     
     Процесс управления балльной системой в общежитии энергетического университета включает в себя множество этапов: сбор информации о действиях студентов, фиксация нарушений и поощрений, расчёт итогового количества баллов, взаимодействие между различными участниками (студентами, администрацией, руководителями подразделений), а также рассмотрение апелляций и формирование отчетов. В настоящее время большая часть этих процессов реализуется вручную или с использованием разрозненных электронных инструментов, не связанных между собой, что порождает ряд проблем: высокая вероятность ошибок, потеря информации, задержки в обработке данных и недостаточная прозрачность.
     Анализ текущей ситуации показал, что одним из ключевых направлений для автоматизации является централизованный учет баллов с возможностью отслеживания их динамики в реальном времени. Необходима реализация защищённой системы авторизации, предоставляющей доступ к личным кабинетам для разных ролей пользователей: студентов, администраторов и руководителей. Это позволит каждому участнику взаимодействовать с системой в рамках своих полномочий, получая только релевантную информацию и функции.
     Также требует автоматизации процедура загрузки доказательств (например, фотографий или документов), подтверждающих выполнение заданий или наличие нарушений. Это должно сопровождаться функцией валидации и безопасного хранения файлов. Не менее важно обеспечить возможность подачи и обработки апелляций – как через формы обратной связи, так и через специализированные разделы, где можно отслеживать статус обращения.
     Дополнительное внимание необходимо уделить алгоритму автоматического подсчета баллов, который должен учитывать заранее определённые правила и исключать человеческий фактор в расчетах. Такой подход не только повысит точность, но и укрепит доверие к системе со стороны студентов. Для администрации также важно иметь инструменты аналитики и отчетности: формирование сводных таблиц, диаграмм, экспорт данных и сбор статистики о начислениях и нарушениях.
     
     3.4 Итоговый список требований

     На основе анализа предметной области, потребностей пользователей и текущих проблем в организации процесса начисления баллов в общежитии энергетического университета сформулирован следующий перечень функциональных и нефункциональных требований к разрабатываемой системе:
     Функциональные требования:
     1. Регистрация и аутентификация пользователей с разделением ролей: студент, администратор, руководитель подразделения.
     2. Личный кабинет студента, содержащий:
     – информацию о текущем количестве баллов;
     – историю начислений и списаний;
     – возможность загрузки фотодоказательств;
     – форму для подачи апелляции.
     3. Личный кабинет администратора/руководителя, включающий:
     – просмотр и редактирование информации по студентам;
     – управление начислением и списанием баллов;
     – проверку и верификацию загруженных доказательств;
     – обработку апелляций.
     4. Автоматический подсчет баллов на основе заранее заданных правил и алгоритмов.
     5. История операций, включающая даты, причины начисления/списания, участников и прикрепленные материалы.
     6. Модуль генерации отчетов с возможностью фильтрации данных, выгрузки в различные форматы (PDF, Excel и др.).
     7. Сбор и отображение статистики по студентам, категориям нарушений/поощрений, частоте апелляций и т.д.
     Нефункциональные требования:
     1. Интуитивно понятный пользовательский интерфейс, доступный с персональных компьютеров и мобильных устройств.
     2. Надежная система хранения данных, обеспечивающая целостность и безопасность информации.
     3. Масштабируемость, позволяющая адаптировать систему под изменения числа пользователей и новых правил.
     4. Защита персональных данных в соответствии с действующим законодательством.
     5. Возможность интеграции с внутренними системами университета при необходимости (например, с системой управления обучением или базой данных студентов).
     Формулировка этих требований станет основой для дальнейшего этапа проектирования программного обеспечения и позволит выстроить структуру системы, максимально соответствующую потребностям пользователей и задачам автоматизации.

     4 РАЗРАБОТКА СУЩЕСТВУЮЩЕЙ, ЛИБО ПЛАНИРУЕМОЙ НА ПРЕДПРИЯТИИ СИСТЕМЫ БИЗНЕС-ПРОЦЕССОВ В НОТАЦИИ BPMN 2.0

     Для глубокого понимания логики функционирования текущей системы и последующего проектирования цифрового решения необходимо провести моделирование бизнес-процессов предметной области с использованием нотации BPMN 2.0 (Business Process Model and Notation). Этот стандарт позволяет визуально представить последовательность действий, участников процессов и точки взаимодействия, а также выявить узкие места, дублирование функций и неэффективные этапы, подлежащие автоматизации.
     Моделирование осуществляется в два этапа: сначала строится модель «как есть» (As-Is), описывающая текущее состояние процессов без автоматизации, затем – модель «как должно быть» (To-Be), отражающая предполагаемую логику работы системы после внедрения программного продукта.
     Модель As-Is показывает, как в настоящее время осуществляется учёт баллов: вручную, с использованием бумажных ведомостей, электронных таблиц. Информация поступает от разных участников – комендантов, старост, студенческого совета – и часто фиксируется нецентрализованно, что приводит к потерям данных, задержкам и снижению прозрачности. Отсутствие стандартизированных процедур и цифровых инструментов порождает субъективность в принятии решений, а также затрудняет контроль и последующий анализ.
     Функциональная модель текущего процесса без автоматизации представлена на рисунке 4.1.

      Рисунок 4.1 – Функциональная модель процесса «Получение баллов в общежитии» без автоматизации
     
     В модели To-Be описывается целевое состояние бизнес-процесса после внедрения информационной системы. Предусматривается использование личных кабинетов, централизованного хранилища данных, автоматических уведомлений и встроенных алгоритмов подсчета баллов. Весь процесс становится прозрачным: студент может видеть свои баллы и историю начислений, администратор – легко контролировать и редактировать информацию, а система – автоматически формировать отчеты и статистику. Существенно сокращается время обработки информации, минимизируются ошибки, повышается контроль на всех этапах.
     Функциональные модели целевого процесса с применением программного обеспечения представлена на рисунках 4.2-4.3.
     Сравнительный анализ моделей As-Is и To-Be позволяет сделать вывод о значительном потенциале повышения эффективности и прозрачности системы за счёт цифровой трансформации. Моделирование по BPMN 2.0 также служит основой для построения более детальных технических диаграмм на следующих этапах проектирования.

      Рисунок 4.2 – Функциональная модель процесса «Получение баллов в общежитии» с применением программного обеспечения
      

Рисунок 4.3 – Функциональная модель подпроцесса «Проверка загруженных баллов»
     5 ПРОЕКТИРОВАНИЕ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ
     5.1 Назначение и цели программного продукта

     Разрабатываемый программный продукт представляет собой информационную систему, предназначенную для автоматизации процессов учета, контроля и анализа баллов, начисляемых студентам, проживающим в общежитиях энергетического университета. Внедрение данной системы направлено на решение актуальной проблемы отсутствия единой цифровой платформы для объективного и прозрачного управления балльной системой, регулирующей приоритеты заселения, поощрения и санкции в отношении студентов.
     Основное назначение системы – обеспечить централизованное и доступное средство взаимодействия между студентами и администрацией общежития в вопросах начисления и списания баллов, загрузки подтверждающих материалов, подачи апелляций и получения аналитической информации. Благодаря внедрению данной системы пользователи получают возможность в реальном времени отслеживать текущую ситуацию, контролировать собственные баллы и участвовать в процессах, влияющих на условия проживания.
     Целями программного продукта являются:
     – обеспечение прозрачности и объективности начисления и списания баллов за поведение и активность студентов;
     – создание удобного и безопасного интерфейса для всех участников процесса (студентов, сотрудников администрации, руководителей студенческих организаций);
     – автоматизация рутинных операций, таких как подсчет баллов, проверка доказательств, генерация отчетов и анализ обращений;
     – снижение административной нагрузки и временных затрат, связанных с ручной обработкой данных;
     – повышение доверия к системе управления общежитием за счёт четких правил, прозрачных механизмов и возможности обратной связи;
     – формирование единого цифрового архива, содержащего полную историю операций, доказательств и решений по апелляциям;
     – создание аналитической базы для принятия управленческих решений и совершенствования внутренней политики университета в области проживания студентов.
     Таким образом, программный продукт не только решает текущие задачи учета баллов, но и служит инструментом цифровой трансформации процессов внутри образовательной организации, направленным на повышение эффективности, открытости и удовлетворённости пользователей.

     5.2 Разработка диаграммы вариантов использования

     Разработка диаграммы вариантов использования является важным этапом в проектировании программного обеспечения, так как она позволяет зафиксировать основные сценарии взаимодействия пользователей с системой, определить границы системы и ключевые функции, предоставляемые различным категориям участников. Для построения данной диаграммы используется нотация UML (Unified Modeling Language).
     Диаграмма вариантов использования (Use Case Diagram) отражает, какие функции доступны пользователям, исходя из их ролей в системе. В контексте проекта «Управление заселением студентов в общежитие» были определены следующие основные роли:
     1. Студент – может просматривать текущие баллы, загружать фотодоказательства.
     2. Староста этажа – подтверждает или отклоняет баллы студента, взаимодействует с председателем и комендантом.
     3. Председатель общежития – подтверждает или отклоняет оценки старост, взаимодействует с комендантом, может инициировать запросы на пересмотр баллов.
     4. Комендант общежития – осуществляет контроль за всеми операциями, проводит проверку доказательств.
     5. Администрация вуза – имеет доступ к полному аналитическому модулю, формирует отчёты, контролирует корректность и эффективность работы всей системы.
     Каждая из перечисленных ролей взаимодействует с определённым набором функций, обеспечивающих выполнение её задач в рамках системы. Такое разграничение позволяет соблюсти принципы безопасности и минимизации доступа, а также упростить пользовательский интерфейс за счёт предоставления только необходимого функционала.
     Диаграмма вариантов использования, отражающая взаимодействие указанных ролей с системой, представлена на рисунке 5.1.
     Данная диаграмма служит основой для дальнейшего проектирования взаимодействий, процессов и интерфейсов системы. Она также помогает разработчикам и заказчикам убедиться в полноте охвата пользовательских сценариев и соответствует требованиям, определённым на предыдущем этапе.
     
      Рисунок 2.4 – Диаграмма вариантов использования

     5.3 Разработка диаграмм последовательности

     Студент – это пользователь системы, который может просматривать свои текущие баллы и загружать фотодоказательства для подтверждения своих достижений. Его взаимодействие с системой ограничено базовыми функциями, необходимыми для выполнения его задач.
     Студент отправляет запрос на просмотр своих текущих баллов. Система обрабатывает запрос и возвращает список баллов. Также студент загружает фотодоказательства. Система принимает доказательства и уведомляет старосту этажа о необходимости проверки. Диаграмма последовательности для студента представлена на рисунке 5.2.
     
     
      Рисунок 5.2 – Диаграмма последовательности (студент)
      
     Староста этажа отвечает за проверку и подтверждение баллов студентов. Он взаимодействует с системой для получения уведомлений о новых доказательствах, а также может взаимодействовать с председателем общежития для передачи данных.
     Староста получает уведомление о новых доказательствах, загруженных студентами. Система отправляет уведомление, когда студент загружает доказательства. Староста подтверждает или отклоняет баллы студента. Система фиксирует решение старосты и уведомляет студента. Староста отправляет запрос председателю общежития для подтверждения сложных случаев. Система передаёт данные председателю. Диаграмма последовательности для старосты этажа представлена на рисунке 5.3.
     
     
      Рисунок 5.3 – Диаграмма последовательности (староста этажа)
     
     Председатель общежития выполняет роль посредника между старостой и комендантом. Он подтверждает или отклоняет оценки старосты и может инициировать проверку доказательств у коменданта.
     Председатель получает запрос от старосты на подтверждение баллов. Система уведомляет председателя о запросе. Председатель отправляет запрос коменданту на проверку доказательств. Система передаёт доказательства коменданту и возвращает результат проверки. Председатель подтверждает или отклоняет оценки старосты. Система фиксирует решение председателя и уведомляет старосту. Диаграмма последовательности для председателя общежития представлена на рисунке 5.4.
     
      Рисунок 5.4 – Диаграмма последовательности (председатель общежития)
     
     Комендант общежития отвечает за проверку доказательств, предоставленных студентами, и за контроль корректности операций в системе. Он взаимодействует с системой для получения запросов на проверку и отправки результатов.
     Комендант получает запрос на проверку доказательств от председателя. Система передаёт доказательства для проверки. Комендант отправляет результат проверки в систему. Система фиксирует результат и уведомляет председателя. Диаграмма последовательности для коменданта общежития представлена на рисунке 5.5.
     
      Рисунок 5.5 – Диаграмма последовательности (комендант общежития)
     Администрация вуза имеет доступ к аналитическим данным системы, формирует отчёты и контролирует корректность работы системы. Это самая привилегированная роль в системе.
     Администрация запрашивает доступ к аналитическому модулю. Система предоставляет доступ к аналитическим данным. Администрация формирует отчёты. Система генерирует отчёты на основе данных. Администрация проверяет корректность работы системы. Система отправляет уведомление о текущем статусе. Диаграмма последовательности для администрации вуза представлена на рисунке 5.6.
     
     
      Рисунок 5.6 – Диаграмма последовательности (администрация вуза)

     5.4 Разработка диаграммы развертывания
     
     Диаграмма развёртывания отражает архитектуру информационной системы, предназначенной для автоматизации процессов учёта, контроля и анализа баллов студентов, проживающих в общежитиях университета. Система состоит из нескольких ключевых компонентов, развёрнутых на различных узлах. Диаграмма развертывания представлена на рисунке 5.7.
     Мобильное устройство студента представляет собой клиентскую часть системы, где установлено мобильное приложение. Это приложение позволяет студентам взаимодействовать с системой, отправлять запросы на просмотр текущих баллов, загружать фотодоказательства и подавать апелляции. Мобильное приложение связывается с сервером приложения через защищённый протокол HTTPS, используя REST API.
     Сервер приложения является центральным узлом системы. На нём развёрнуты веб-сервер и API, которые обрабатывают запросы от мобильных приложений студентов и веб-браузеров сотрудников администрации. Сервер приложения отвечает за логику обработки данных, проверку доказательств, подсчёт баллов и передачу данных в базу данных.
     Сервер базы данных хранит всю информацию, необходимую для работы системы. Это включает данные о баллах студентов, загруженные доказательства, историю операций, апелляции и аналитические данные. Сервер приложения взаимодействует с базой данных через SQL-запросы, обеспечивая надёжное хранение и доступ к данным.
     Административное устройство используется сотрудниками администрации общежития и университета для взаимодействия с системой через веб-браузер. Веб-интерфейс предоставляет доступ к аналитическим данным, инструментам для формирования отчётов, а также позволяет контролировать корректность работы системы. Связь между административным устройством и сервером приложения осуществляется через HTTPS.
     
      Рисунок 5.7 – Диаграмма развертывания
     
     Таким образом, система обеспечивает прозрачность и объективность начисления и списания баллов, автоматизирует рутинные операции и снижает административную нагрузку. Её архитектура построена с учётом безопасности, удобства использования и масштабируемости, что позволяет эффективно решать задачи управления общежитием и повышать удовлетворённость пользователей.
     6 РАЗРАБОТКА ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ

     В рамках разработки информационной системы «Управление заселением студентов в общежитие» был реализован программный продукт, направленный на автоматизацию процессов учёта, контроля и анализа баллов студентов. Основной целью разработки стало создание эффективного цифрового инструмента, обеспечивающего прозрачность, объективность и удобство взаимодействия между студентами и администрацией общежития.
     Для реализации системы использовались технологии, соответствующие современным требованиям разработки мобильных приложений и серверной инфраструктуры. Основной упор был сделан на использование инструментов, предоставленных в проекте.
     Клиентская часть системы была реализована в виде мобильного приложения на языке Kotlin с использованием Android SDK. Это позволило обеспечить нативную производительность и удобство работы на устройствах Android. Исходный код приложения размещён в папке src/main/, где содержатся основные модули и ресурсы приложения. Для управления зависимостями и сборкой проекта использовался Gradle с конфигурацией в файле build.gradle.kts.
     Серверная часть системы была интегрирована с Firebase, что подтверждается наличием файла google-services.json в проекте. Firebase предоставил такие возможности, как аутентификация пользователей, хранение данных в облаке и отправка уведомлений. Это позволило упростить реализацию серверной логики и обеспечить масштабируемость системы.
     Для обеспечения безопасности и оптимизации работы приложения использовались правила ProGuard, определённые в файле proguard-rules.pro. Это позволило минимизировать размер приложения и защитить его от обратной разработки.
     1. Авторизация и доступ к системе.
     Пользователи (студенты, старосты, председатели и администрация) проходят авторизацию через мобильное приложение. Аутентификация реализована с использованием Firebase Authentication, что обеспечивает безопасность и удобство входа.
     2. Ввод данных и взаимодействие с системой.
     Студенты вводят данные о своих достижениях и загружают фотодоказательства через мобильное приложение. Эти данные отправляются на сервер Firebase, где они сохраняются и обрабатываются. Вход в систему представлен на рисунке 6.1.
     
     
      Рисунок 6.1 – Вход в систему
     
     3. Проверка данных и начисление баллов.
     Старосты и председатели проверяют загруженные доказательства через интерфейс приложения. После проверки баллы автоматически начисляются студентам. Главное меню представлено на рисунке 6.2.
     
      Рисунок 6.2 – Главное меню
     
     Страница с подтверждением баллов представлена на рисунке 6.3, а просмотр баллов продемонстрирован на рисунке 6.4. Страница с отправкой баллов представлена на рисунке 6.5.
     4. Формирование аналитических отчётов.
     Администрация формирует отчёты о текущем состоянии балльной системы. Для этого используются данные, хранящиеся в Firebase, которые могут быть экспортированы в удобные форматы.
     5. Управление доступом и настройками.
     Администраторы управляют правами пользователей и настраивают параметры системы через административный интерфейс.
     
      Рисунок 6.3 – Подтверждение баллов
     
     
      Рисунок 6.4 – Просмотр баллов
     
      Рисунок 6.5 – Отправка баллов
     
     Для проверки корректности работы системы было проведено комплексное тестирование. Модульное тестирование охватывало отдельные компоненты приложения, включая обработку данных и взаимодействие с Firebase. Интеграционное тестирование проверяло корректность взаимодействия между клиентской частью и серверной инфраструктурой. Также было проведено функциональное тестирование, чтобы убедиться в правильной работе всех сценариев использования.
     После успешного тестирования система была внедрена на сервере университета. Это позволило студентам и администрации оперативно и удобно взаимодействовать с балльной системой.
     7 ПРОВЕДЕНИЕ ТЕХНИКО-ЭКОНОМИЧЕСКОГО ОБОСНОВАНИЯ ВНЕДРЕНИЯ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ


ЗАКЛЮЧЕНИЕ
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ
ПРИЛОЖЕНИЯ
5

